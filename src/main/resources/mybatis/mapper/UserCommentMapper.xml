<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.easyblog.mapper.UserCommentMapper">
  <resultMap id="BaseResultMap" type="org.easyblog.bean.UserComment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_send" jdbcType="INTEGER" property="commentSend" />
    <result column="comment_received" jdbcType="INTEGER" property="commentReceived" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.easyblog.bean.UserComment">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, comment_send, comment_received, article_id, comment_time, like_num, pid, 
    level
  </sql>
  <sql id="Blob_Column_List">
    comment_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.easyblog.bean.UserComment">
    insert into user_comment (comment_id, comment_send, comment_received, 
      article_id, comment_time, like_num, 
      pid, level, comment_content
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentSend,jdbcType=INTEGER}, #{commentReceived,jdbcType=INTEGER}, 
      #{articleId,jdbcType=BIGINT}, #{commentTime,jdbcType=TIMESTAMP}, #{likeNum,jdbcType=INTEGER}, 
      #{pid,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.easyblog.bean.UserComment">
    insert into user_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentSend != null">
        comment_send,
      </if>
      <if test="commentReceived != null">
        comment_received,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentSend != null">
        #{commentSend,jdbcType=INTEGER},
      </if>
      <if test="commentReceived != null">
        #{commentReceived,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.easyblog.bean.UserComment">
    update user_comment
    <set>
      <if test="commentSend != null">
        comment_send = #{commentSend,jdbcType=INTEGER},
      </if>
      <if test="commentReceived != null">
        comment_received = #{commentReceived,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.easyblog.bean.UserComment">
    update user_comment
    set comment_send = #{commentSend,jdbcType=INTEGER},
      comment_received = #{commentReceived,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=BIGINT},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      like_num = #{likeNum,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.easyblog.bean.UserComment">
    update user_comment
    set comment_send = #{commentSend,jdbcType=INTEGER},
      comment_received = #{commentReceived,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=BIGINT},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      like_num = #{likeNum,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>